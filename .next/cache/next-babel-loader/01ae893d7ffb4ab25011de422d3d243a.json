{"ast":null,"code":"var _jsxFileName = \"/Users/mark/Desktop/gitTest/git_test/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone'; // 해당부분 클릭시 사진 업로드 되는 모듈\n\nimport { PlusOutlined } from '@ant-design/icons'; // + 아이콘\n\naxios.defaults.withCredentials = true;\nlet refresh_token = '1//0ex6TBpzCgk2iCgYIARAAGA4SNwF-L9IrakdtWPC8i5ChC-heK3bTsgq4SviJmzfDLP_J79NlN3KG6BnJy_i4mm-n0z1Qa4xeaQ4';\nlet access_token = \"ya29.a0AfH6SMDzypWh4v3I2lXtmai-8FFAJ09bNEwQivWwYq006jBTHYoAkUmBOq5D2wv_pcWoYtMfY73VQnFz2ikxj8T1w6W3uWWLI2l9N3fBl-S1pYwm2bZDIzoZ3hfSMLIvHag92flFqelPSi65weAe2b6LmaiGpVhFRr4\";\nlet provider = 'google';\n\nconst Home = () => {\n  const {\n    0: Images,\n    1: setImages\n  } = useState([]);\n\n  const dropHandler = files => {\n    let formData = new FormData(); // 이미지 전송시 헤더값 multipart/fomr-data 이어야함\n\n    const config = {\n      header: {\n        'content-type': 'multipart/fomr-data'\n      }\n    };\n    formData.append(\"file\", files[0]);\n    axios.post('http://localhost:8000/api/save/image/', formData, config).then(response => {\n      console.log(response.data);\n\n      if (response.data.success) {\n        console.log(Images); // 성공적으로 응답이 왔으면 기존이미지에 추가\n\n        setImages([...Images, response.data.fileName]); // props.updateImages([...Images, response.data.fileName]) // // 부모 컴포넌트 Image state업데이트\n      } else {\n        alert('파일을 저장하는데 실패했습니다.');\n      }\n    });\n  }; // 해당이미지 클릭시 이미지 지워주는 메소드\n\n\n  const deleteHandler = image => {\n    const currentImg = Images.indexOf(image); // 해당이미지가 어디에 있는지 추출\n\n    console.log(currentImg);\n    let newImages = [...Images]; // 복사\n\n    newImages.splice(currentImg, 1); // 해당하는 것만 잘라내기\n\n    setImages(newImages); // 스테이트 업데이트\n\n    props.updateImages(newImages); // 부모 컴포넌트 Image state업데이트\n  };\n\n  const kakao = () => {\n    axios.get('http://localhost:8000/user/test').then(res => {\n      console.log(res.data);\n    });\n  };\n\n  const test = () => {\n    axios.get('http://localhost:8000/user/test2').then(res => {\n      console.log(res.data);\n    });\n  };\n\n  const test2 = () => {\n    axios.get('http://localhost:8000/user/userinfo').then(res => {\n      console.log(res.data);\n    });\n  };\n\n  const test3 = () => {\n    axios.post('http://localhost:8000/user/logout').then(res => {\n      console.log(res.data);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"asdasdsad\"), __jsx(\"form\", {\n    action: \"https://www.googleapis.com/oauth2/v4/token\",\n    method: \"post\",\n    encType: \"application/x-www-form-urlencoded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"client_id\",\n    value: \"192549111246-ji6meo3haqck4p6nq3l10hmhvkso45qb.apps.googleusercontent.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"client_secret\",\n    value: \"pEMK4G7kYYZlPIZj4M9IxYhq\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"refresh_token\",\n    value: \"1//0eelSdiBvDiPgCgYIARAAGA4SNwF-L9IreokUSW3L2dANFM3gGSFWgBVW-noloIgC0hSFjVVSpD_tODawbcQEh-MyW8Nij5iIEx8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"grant_type\",\n    value: \"refresh_token\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"\\uD074\\uB9AD\")), __jsx(\"button\", {\n    onClick: kakao,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(\"button\", {\n    onClick: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\"), __jsx(\"button\", {\n    onClick: test2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"\\uC720\\uC800\\uC815\\uBCF4\"), __jsx(\"button\", {\n    onClick: test3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"), __jsx(Dropzone, {\n    onDrop: dropHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => __jsx(\"div\", _extends({\n    style: {\n      width: 300,\n      height: 240,\n      border: '1px solid lightgray',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), __jsx(PlusOutlined, {\n    type: \"plus\",\n    style: {\n      fontSize: '3rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      width: '350px',\n      height: '240px',\n      overflowX: 'scroll',\n      position: 'relative',\n      left: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, Images.map((image, index) => __jsx(\"div\", {\n    key: image + index,\n    onClick: () => deleteHandler(image),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    style: {\n      minWidth: '300px',\n      width: '300px',\n      height: '240px'\n    },\n    src: `${image}`,\n    alt: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Home; //고차함수는 기존함수에 기능을 더 추가하는 개념임.\n// export default NodeBird;\n// export default withRedux((initalState, options) => {\n//   const middlewares = [];\n//   const enhance = compose(\n//     applyMiddleware(...middlewares),\n//     typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__(): (f) => f,\n//   )\n//   const store = createStore(reducer, initalState, enhance);\n//   return store;\n// })(NodeBird)","map":{"version":3,"sources":["/Users/mark/Desktop/gitTest/git_test/pages/index.js"],"names":["axios","React","useState","Dropzone","PlusOutlined","defaults","withCredentials","refresh_token","access_token","provider","Home","Images","setImages","dropHandler","files","formData","FormData","config","header","append","post","then","response","console","log","data","success","fileName","alert","deleteHandler","image","currentImg","indexOf","newImages","splice","props","updateImages","kakao","get","res","test","test2","test3","getRootProps","getInputProps","width","height","border","display","alignItems","justifyContent","fontSize","overflowX","position","left","map","index","minWidth"],"mappings":"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","sourcesContent":["\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport Dropzone from 'react-dropzone' // 해당부분 클릭시 사진 업로드 되는 모듈\nimport { PlusOutlined } from '@ant-design/icons'; // + 아이콘\n\n\naxios.defaults.withCredentials = true\nlet refresh_token = '1//0ex6TBpzCgk2iCgYIARAAGA4SNwF-L9IrakdtWPC8i5ChC-heK3bTsgq4SviJmzfDLP_J79NlN3KG6BnJy_i4mm-n0z1Qa4xeaQ4'\nlet access_token = \"ya29.a0AfH6SMDzypWh4v3I2lXtmai-8FFAJ09bNEwQivWwYq006jBTHYoAkUmBOq5D2wv_pcWoYtMfY73VQnFz2ikxj8T1w6W3uWWLI2l9N3fBl-S1pYwm2bZDIzoZ3hfSMLIvHag92flFqelPSi65weAe2b6LmaiGpVhFRr4\"\nlet provider = 'google'\nconst Home = () => {\n\n  const [Images, setImages] = useState([])\n\n  const dropHandler = (files) => {\n\n      let formData = new FormData();\n      // 이미지 전송시 헤더값 multipart/fomr-data 이어야함\n      const config = {\n          header: { 'content-type': 'multipart/fomr-data' }\n      }\n      formData.append(\"file\", files[0])\n\n      axios.post('http://localhost:8000/api/save/image/', formData, config)\n          .then(response => {\n              console.log(response.data);\n              if (response.data.success) {\n                  console.log(Images);\n                  // 성공적으로 응답이 왔으면 기존이미지에 추가\n                  setImages([...Images, response.data.fileName])\n                  // props.updateImages([...Images, response.data.fileName]) // // 부모 컴포넌트 Image state업데이트\n\n              } else {\n                  alert('파일을 저장하는데 실패했습니다.')\n              }\n          })\n  }\n  // 해당이미지 클릭시 이미지 지워주는 메소드\n  const deleteHandler = (image) => {\n      const currentImg = Images.indexOf(image); // 해당이미지가 어디에 있는지 추출\n      console.log(currentImg)\n      let newImages = [...Images] // 복사\n      newImages.splice(currentImg, 1) // 해당하는 것만 잘라내기\n      setImages(newImages)// 스테이트 업데이트\n      props.updateImages(newImages) // 부모 컴포넌트 Image state업데이트\n  }\n\n  const kakao = () => {\n    axios.get('http://localhost:8000/user/test')\n      .then(res => { console.log(res.data) })\n  }\n\n  const test = () => {\n    axios.get('http://localhost:8000/user/test2')\n      .then(res => { console.log(res.data) })\n  }\n\n  const test2 = () => {\n    axios.get('http://localhost:8000/user/userinfo')\n      .then(res => { console.log(res.data) })\n  }\n  const test3 = () => {\n    axios.post('http://localhost:8000/user/logout')\n      .then(res => { console.log(res.data) })\n  }\n\n  return (\n    <>\n      <h1>asdasdsad</h1>\n      <form action=\"https://www.googleapis.com/oauth2/v4/token\" method=\"post\" encType=\"application/x-www-form-urlencoded\">\n        <input type=\"text\" name=\"client_id\" value=\"192549111246-ji6meo3haqck4p6nq3l10hmhvkso45qb.apps.googleusercontent.com\"></input>\n        <input type=\"text\" name=\"client_secret\" value=\"pEMK4G7kYYZlPIZj4M9IxYhq\"></input>\n        <input type=\"text\" name=\"refresh_token\" value=\"1//0eelSdiBvDiPgCgYIARAAGA4SNwF-L9IreokUSW3L2dANFM3gGSFWgBVW-noloIgC0hSFjVVSpD_tODawbcQEh-MyW8Nij5iIEx8\"></input>\n        <input type=\"text\" name=\"grant_type\" value=\"refresh_token\"></input>\n        <button type=\"submit\">클릭</button>\n      </form>\n      <button onClick={kakao}>\n        로그인\n      </button >\n      <button onClick={test}>\n        회원가입\n      </button>\n      <button onClick={test2}>유저정보</button>\n      <button onClick={test3}>로그아웃</button>\n      <Dropzone onDrop={dropHandler}>\n        {({ getRootProps, getInputProps }) => (\n          <div\n            style={{\n              width: 300, height: 240, border: '1px solid lightgray',\n              display: 'flex', alignItems: 'center', justifyContent: 'center'\n            }}\n            {...getRootProps()}>\n            <input {...getInputProps()} />\n            <PlusOutlined type=\"plus\" style={{ fontSize: '3rem' }} />\n          </div>\n        )}\n      </Dropzone>\n      <div style={{ display: \"flex\", width: '350px', height: '240px', overflowX: 'scroll', position: 'relative', left: '10px' }}>\n        {/* 현재 Image 스테이트에 있는 값들을 img태그를 이용하여 구현 // src에 있는부분은 서버주소이어야함 */}\n        {Images.map((image, index) => (\n          <div key={image + index} onClick={() => deleteHandler(image)}>\n            <img style={{ minWidth: '300px', width: '300px', height: '240px' }}\n              src={`${image}`} alt=\"profile\"\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  )\n};\nexport default Home\n\n//고차함수는 기존함수에 기능을 더 추가하는 개념임.\n\n// export default NodeBird;\n\n// export default withRedux((initalState, options) => {\n//   const middlewares = [];\n//   const enhance = compose(\n//     applyMiddleware(...middlewares),\n//     typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__(): (f) => f,\n//   )\n\n//   const store = createStore(reducer, initalState, enhance);\n//   return store;\n// })(NodeBird)\n"]},"metadata":{},"sourceType":"module"}